dev.off()
pdf(paste(fig.dir,"GobalTemperaturSimData_all.pdf",sep=""))
plot(x,ylab="Value")
lines(ts(x[ind]),x=c(ind),col="red")
abline(v=ind[1])
abline(v=ind[length(ind)])
dev.off()
##############Multiple time series###############
www <- "http://www.math.pku.edu.cn/teachers/xirb/Courses/TimeSeries/IntroTimeSeriesRData/cbe.dat"
CBE <- read.table(www, header = T)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Beer.ts <- ts(CBE[, 2], start = 1958, freq = 12)
Choc.ts <- ts(CBE[, 1], start = 1958, freq = 12)
pdf(paste(fig.dir,"AustrilianChoBeerElec.pdf",sep=""))
plot(cbind(Elec.ts, Beer.ts, Choc.ts),main="Chocolate, Beer, and Electricity Production: 1958-1990")
dev.off()
pdf(paste(fig.dir,"AustrilianElec_AP.pdf",sep=""))
AP.elec <- ts.intersect(AP, Elec.ts)
AP <- AP.elec[,1]; Elec <- AP.elec[,2]
layout(1:3)
plot(AP, main = "", ylab = "Air passengers / 1000's")
plot(Elec, main = "", ylab = "Electricity production / MkWh")
plot(as.vector(AP), as.vector(Elec),
xlab = "Air passengers / 1000's",
ylab = "Electricity production / MWh")
abline(reg = lm(Elec ~ AP))
dev.off()
####### now the data from "应用时间序列分析" ############
source('http://www.math.pku.edu.cn/teachers/xirb/Courses/TimeSeries/code/data.r')
source("http://www.math.pku.edu.cn/teachers/xirb/Courses/TimeSeries/code/atsa01.r")
demo.coal()
######## #############
data(AirPassengers)
AP <- AirPassengers
AP = log(AP)
### Use decompose
par(mfrow=c(2,1),lwd=2)
plot(AP)
z = decompose(AP)
lines(z$trend,col="blue")
lines(z$trend+z$seasonal,col="red")
legend("topleft",lty=1,col=c("black","blue","red"),legend=c("Observed Data","Trend","Fitted"))
plot(z$seasonal,col="blue",ylim=c(-0.03,0.03))
lines(z$random,col="green")
legend("topleft",lty=1,col=c("black","blue"),legend=c("Random","Seasonal"))
### Use stl
z = stl(AP,s.window="periodic",s.degree=0)
par(mfrow=c(2,1),lwd=2)
plot(AP)
lines(z$time.series[,2],col="blue")
lines(z$time.series[,2]+z$time.series[,1],col="red")
legend("topleft",lty=1,col=c("black","blue","red"),legend=c("Observed Data","Trend","Fitted"))
plot(z$time.series[,1],col="red")
lines(z$time.series[,3],col="green")
legend("topleft",lty=1,col=c("black","blue"),legend=c("Random","Seasonal"))
View(beta_next_iretation)
View(lambda)
s <- 0
library（splines）
library（splines）
?bs
?BS
pwd
%pwd
getwd()
?ts
gamma0=12.4168; gamma1= −4.7520; gamma2=5.2; k=50;
Omega<− matrix(0,2,k) ;
gamma0=12.4168; gamma1= −4.7520; gamma2=5.2; k=50;
gamma0=12.4168; gamma1= −4.7520; gamma2=5.2; k=50;
gamma0=12.4168;
gamma1=−4.7520;
gamma1=−4.7520;
gamma1=-4.7520;
gamma2=5.2; k=50;
Omega<−matrix(0,2,k) ;
Omega[1 ,1]=gamma1;
Omega<−matrix(0,2,k);
Omega<-matrix(0,2,k);
Omega[1 ,1]=gamma1;
Omega[1 ,2]=gamma2; Omega[2,1]=gamma2;
Gamma<−diag (0,k) ;
for(i in 1:k){
Gamma<-diag (0,k) ;
for(i in 1:k){
Gamma[i,i]=gamma0;
}
for(i in 1:(k−1)){
for(i in 1:(k-1)){
for(i in 1:k){
Gamma[i,i]=gamma0;
}
for(i in 1:(k-1)){
Gamma[i,i+1]=gamma1;
Gamma[i+1,i] = gamma1;
}
for(i in 1:(k−2)){
for(i in 1:(k-2)){
Gamma[i,i+2]=gamma2;
Gamma[i+2,i]=gamma2 ;
}
Pi=Omega%∗%solve (Gamma)%∗%t (Omega ) ;
Pi=Omega% ∗ %solve(Gamma)%∗%t (Omega ) ;
C=matrix (1,2,1);
Figure 1: Problem 1.5
C[2,1]=0;
g=matrix (1,2,1);
g[1]=gamma1;
g[2]=gamma2;
sigmasq=(gamma0−t(C)%∗%Pi%∗%C)[1,1];
sigmasq=(gamma0-t(C)%∗%Pi%∗%C)[1,1];
g=matrix (1,2,1);
g[1]=gamma1;
g[2]=gamma2;
sigmasq=(gamma0-t(C)%∗%Pi%∗%C)[1,1];
A=matrix(0,2,2);
A[1,2]=1;
b=matrix(0,2,1);
b<−1/sigmasq∗(g−A%∗%Pi%∗%C);
b<-1/sigmasq∗(g−A%∗%Pi%∗%C);
b<-1/sigmasq∗(g-A%∗%Pi%∗%C);
A%∗%Pi%∗%C
gamma0=12.4168;
gamma1=-4.7520;
gamma2=5.2;
k=50;
Omega<-matrix(0,2,k);
Omega[1,1]=gamma1;
Omega[1,2]=gamma2;
Omega[2,1]=gamma2;
Gamma<-diag (0,k);
for(i in 1:k)
{
Gamma[i,i]=gamma0;
}
for(i in 1:(k-1))
{
Gamma[i,i+1]=gamma1;
Gamma[i+1,i] = gamma1;
}
for(i in 1:(k-2)){
Gamma[i,i+2]=gamma2;
Gamma[i+2,i]=gamma2 ;
}
solve(Gamma)
solve(Gamma)%∗%t(Omega)
solve(Gamma)%*%t(Omega)
a1=0.0894;
a2=−0.6265;
a1=0.0894;
a2=-0.6265;
b1=-0.3334;
b2=0.8158;
psy<-rep (0,130);
psy[1]=b1+a1;
psy[2]=b2+a1*psy[1]+a2;
for(j in 3:130)
{
psy[j]=a1*psy[j−1]+a2*psy[j−2];
}
sigmasq =4.0119;
gamma<-rep(0,10);
for (k in 1:10)
a1=0.0894;
a2=-0.6265;
b1=-0.3334;
b2=0.8158;
psy<-rep (0,130);
psy[1]=b1+a1;
psy[2]=b2+a1*psy[1]+a2;
for(j in 3:130)
{
psy[j]=a1*psy[j-1]+a2*psy[j-2];
}
sigmasq =4.0119;
gamma<-rep(0,10);
for (k in 1:10)
{ gamma[k]=psy[k];
for ( j in 1:100)
{
gamma[k]=gamma[k]+psy[ j ]*psy[ j+k];
}
gamma[k]=sigmasq*gamma[k];
}
gamma
M=1000;
a=-0.5;
b= -0.5;
S a m p l e <- r e p ( 0 , M ) ; for ( i in 1:M){ a1=a+b ;
M=1000;
a=-0.5;
b= -0.5;
Sample<-rep(0,M);
for(i in 1:M)
{ a1=a+b ;
a2=-a*b;
x=arima.sim(200,model=list (ar=c(a1,a2),sd=2));
xbar=mean(x);
Sample[i]=xbar;
}
mean(Sample);
Std=sqrt(sum((Sample- mean(Sample) )ˆ2)/(M-1)) ;
Std=sqrt(sum((Sample- mean(Sample) )ˆ2)/(M-1));
Std=sqrt(sum((Sample- mean(Sample))^2)/(M-1));
rec=NULL
diff1<-matrix(1:700,nrow=100,ncol=7)
quit()
View(diff1)
install.packages("alr4")
library(alr4)
alr4Web("primer")
library('alr4')
library('car')
library('effects')
library('alr4')
show(alr4)
show(alr4Web())
data("BigMac2003")
data
bm<-data("BigMac2003")
bm
plot(bm)
summary(z)
z <- c(2, 3, 4, 2, 3, 4, 3, 3, 2, 2)
z <- c(2, 3, 4, 2, 3, 4, 3, 3, 2, 2)
summary(z)
class(z)
z.factor <- factor(z)
summary(z.factor)
class(z)
class(z.factor)
m1 <- lm(y ~ x, data=physics, weights=1/SD^2)
library('alr4')
library('alr4')
m1 <- lm(y ~ x, data=physics, weights=1/SD^2)
summary(m1)
SD
help(lm)
a = data("physics")
a
show(a)
print(a)
a.columns
summary(a)
a.SD
data("physics")
dim(a)
a <-data("physics")
dim(a)
a <-data("physics")
dim(physics)
names(physics)
show(physics$SD)
show(physics$x)
show(physics)
m1 <- lm(y ~ x, data=physics, weights=1/SD^2)
summary(m1)
m1 <- lm(y ~ x, data=physics, weights=1/x^2)
summary(m1)
m1 <- lm(y ~ x+x^2, data=physics, weights=1/SD^2)
summary(m1)
m1 <- lm(y ~1+x+x^2, data=physics, weights=1/SD^2)
summary(m1)
m1 <- lm(y ~1+x+x^2, data=physics)
summary(m1)
setwd("~/OneDrive/ColumbiaCourseWork/4709_Stat")
ls
list
setwd("~/OneDrive/ColumbiaCourseWork/4709_Stat/lecture1")
df = read.table(“IBMreturns.csv”, header = TRUE, sep = “,”);
df = read.table("IBMreturns.csv", header = TRUE, sep = ",");
df = read.table("IBMreturns.csv", header = TRUE, sep = “,”);
clear
clear()
clean()
clean
clr
clean
df
class(df)
df$Date ← as.Date(df$Date,“%m/%d/%Y”);
df$Date<-as.Date(df$Date,"%m/%d/%Y");
df = read.table("msftreturns.csv", header = TRUE, sep = ",");
df = read.table("msftreturns_.csv", header = TRUE, sep = ",");
df$Date<-as.Date(df$Date,"%m/%d/%Y");
df
IBM <- read.table("IBMPrices.csv", header = TRUE, sep = ",");
IBM
IBM$Date<-as.Date(IBM$Date,"%m/%d/%Y");
IBM$Date<-as.Date(IBM$Date,"%m/%d/%Y");
ggplot(data = IBM, aes(Date,Open)) + geom_point() + labs(x="Date",y="Returns",title="IBMReturns"))
ggplot(data = IBM, aes(Date,Open)) + geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
ggplot2(data = IBM, aes(Date,Open)) + geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
library(ggplot);
install.packages("ggplot")
install.packages("ggplot2")
ggplot2(data = IBM, aes(Date,Open)) + geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
library(ggplot2);
r
Sys.info()
library(ggplot);
install.packages("ggplot")
install.packages("installr")
ggplot2(data = IBM, aes(Date,Open))
library(ggplot2);
ggplot2(data = IBM, aes(Date,Open))
library("ggplot2");
ggplot2(data = IBM, aes(Date,Open))
library(ggplot2);
ggplot(data = IBM, aes(Date,Open))
ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
msdf <- read.table("msftreturns_.csv",header = TRUE, sep = ",")
msdf = read.table("msftreturns_.csv",header = TRUE, sep = ",")
msdf
ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBMReturns")
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBM Returns")
msdf <- read.table("msftreturns_.csv",header = TRUE, sep = ",")
msdf$Date<-as.Date(msdf$Date,"%m/%d/%Y");
ms_plot<-ggplot(data = msdf, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="MS Returns")
ms_plot<-ggplot(data = msdf, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="MS Returns")
ms_plot
hist(IBM$Open,breaks = 50, main = "IBM")
hist(msdf$Open,breaks = 50,main = 'fk')
hist_IBM<-hist(IBM$Open,breaks = 50, main = "IBM")
hist_msft<-hist(msdf$Open,breaks = 50,main = 'MSFT')
print(mean(IBM$Open))
print(mean(msdf$Open))
print(mean(IBM$Open))
print(mean(msdf$Open))
mean(msdf$Open)
msdf
msdf$Open
library(ggplot2);
library(ggplot2);
library(ggplot2);
IBM<-read.table("IBMPrices.csv", header = TRUE, sep = ",");
IBM$Date<-as.Date(IBM$Date,"%m/%d/%Y");
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBM Returns")
msdf<-read.table("msftreturns_.csv",header = TRUE, sep = ",")
msdf$Date<-as.Date(msdf$Date,"%m/%d/%Y");
ms_plot<-ggplot(data = msdf, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="MS Returns")
ms_plot
hist_IBM<-hist(IBM$Open,breaks = 50, main = "IBM")
hist_msft<-hist(msdf$Open,breaks = 50,main = 'MSFT')
print(mean(IBM$Open))
print(mean(msdf$Open))
source('~/OneDrive/ColumbiaCourseWork/4709_Stat/lecture1/lec1.R')
install.packages("gcookbook")
print(sd(IBM$Open,na.rm = TRUE))
print(sd(msdf$Open,na.rm = TRUE))
library(ggplot2);
IBM<-read.table("IBMPrices.csv", header = TRUE, sep = ",");
IBM$Date<-as.Date(IBM$Date,"%m/%d/%Y");
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_bar() + labs(x="Date",y="Returns",title="IBM Returns")
msdf<-read.table("msftreturns_.csv",header = TRUE, sep = ",")
IMB_plot
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_ribbon() + labs(x="Date",y="Returns",title="IBM Returns")
IMB_plot
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_dotplot() + labs(x="Date",y="Returns",title="IBM Returns")
IMB_plot
IMB_plot<-ggplot(data = IBM, aes(Date,Open))+ geom_point() + labs(x="Date",y="Returns",title="IBM Returns")
IMB_plot
data("diamonds")
head(diamonds)
install.packages("randomForest")
sigma = matrix([1,0,0;0,1,0;0,0,1])
sigma = matrix(1,0,0;0,1,0;0,0,1)
sigma = matrix(1,0,0,1,0,0,1)
sigma = matrix(c(1,0,0,0,1,0,0,0,1),nrow = 3,ncol = 3)
sigma
chol(sigma)
sigma = matrix(c(1,0,0,0,2,0,0,0,1),nrow = 3,ncol = 3)
chol(sigma)
(1:10)
?mean
?diamonds
browseVignettes()
install.git()
sd(0:100)
demo(mathplot)
demo(plotmath)
-1:1 ** -2:2
-1:1 ** -2:0
-1:1 ** -1:1
-1:1 * -1:1
pi
cos(0:6 * pi)
sqrt(1:5)^2 - (1:5)
all.equal(sqrt(1:10),1:10,tolerance = 1.0e-18)
all.equal(sqrt(1:10),1:10,tolerance = 1.0e-15)
all.equal(sqrt(1:10),1:10)
all.equal(sqrt(2) ^ 2, 2)
all.equal(sqrt(1:10)^2,1:10)
all.equal(sqrt(1:10)^2,1:10,tolerance = 1.0e-18)
mat((1:9),nrow(3),ncol(3))
matrix((1:9),nrow = 3,ncol = 3)
matrix((1:9),nrow = 3,ncol = 3)
matrix((1:9),nrow = 3,ncol = 3)
a <- matrix((1:9),nrow = 3,ncol = 3)
chol(a)
qr(a)
wage
data("wage")
library(MASS)
install.packages("ISLR")
library(ISLR)
data("wage")
ISLR::Wage
ISLR::Smarket
source('~/OneDrive/ColumbiaCourseWork/4709_Stat/lecture1/lec1.R')
library(MASS)
library(ISLR)
setwd("~/OneDrive/ColumbiaCourseWork/4525_ML/ISLR")
setwd("~/OneDrive/ColumbiaCourseWork/4525_ML/ISLR")
setwd("~/OneDrive/ColumbiaCourseWork/4525_ML/ISLR")
setwd("~/OneDrive/ColumbiaCourseWork/4525_ML/ISLR")
library(MASS)
data(Advertising)
data("Advertising")
fix(Boston)
data("Boston")
names(Boston)
testm<-matrix(c(1,2,3,4,5,6),nrow = 2,ncol = 3)
La.svd(x = testm)
testm
sum(c(0.839,0.544)^2)
prcomp(testm)
sum(c(0.5773503,-0.8164966)^2)
%pwd
pwd
cd
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, format = "%y-%m-%d")
data1
data1$BBVA.US.Equity
library(ggplot2)
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1
data1$Date
data1$Date <- as.Date(data1$Date, format = "%y-%m-%d")
data2$Date <- as.Date(data2$Date,format = "%y-%m-%d")
ggplot(data = data1,aes(Date,Return))+geom_point()
names(data1)
ggplot(data = data1,aes(Date,PX_OPEN))+geom_point()
data1
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1
ggplot(data = data1,aes(Date,PX_OPEN))+geom_point()
data1.names
names(data1)
data1$Date
class(data1$Date)
data1$Date <- as.Date(data1$Date, format = "%y-%m-%d")
data1$Date
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, format = "%m-%d-%y")
data1$Date
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, format = "%m%d%y")
data1$Date
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, format = "%m%d%y")
data1$Date
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, "%m/%d/%Y")
data1$Date
data2$Date <- as.Date(data2$Date, "%m/%d/%Y")
ggplot(data = data1,aes(Date,PX_OPEN))+geom_point()
library(ggplot2)
data1 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/BBVAreturn.csv", header = TRUE, sep = ",");
data2 = read.table("/Users/wrk/OneDrive/ColumbiaCourseWork/4709_Stat/Homework/GEreturn.csv", header = TRUE, sep = ",");
data1$Date <- as.Date(data1$Date, "%m/%d/%Y")
data2$Date <- as.Date(data2$Date, "%m/%d/%Y")
ggplot(data = data1,aes(Date,PX_OPEN))+geom_point()
ggplot(data = data1,aes(Date,return))+geom_point()
naggplot(data = data2,aes(Date,return))+geom_point()
ggplot(data = data2,aes(Date,return))+geom_point()
hist(data1$Return, breaks= 50, main='BBVA');
hist(data2$Return, breaks= 50, main='GE');
hist(data1$return, breaks= 50, main='BBVA');
hist(data2$return, breaks= 50, main='GE');
mean(data1$return)
mean(data2$return)
var(data1$return)
var(data2$return)
cov(data1$return,data2$return)
corr(data1$return,data2$return)
cov(data1$return,data2$return)/sqrt(var(data2$return)*var(data1$return))
mean(data1$return)
mean(data2$return)
var(data1$return)
var(data2$return)
ggplot(data = data1,aes(Date,return))+geom_point()
ggplot(data = data1,aes(Date,return))+geom_point()
ggplot(data = data2,aes(Date,return))+geom_point()
hist(data1$return, breaks= 50, main='BBVA');
hist(data2$return, breaks= 50, main='GE');
